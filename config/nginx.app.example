map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    application/font-woff      max;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}


server {

	server_name takemefrom.com;

	listen 80 default_server;
	listen [::]:80 default_server;

	expires $expires;

	root /var/www/ksiaki/current/app;
	index index.php index.html;

	client_max_body_size 50M;

	add_header X-Frame-Options "SAMEORIGIN";
	add_header Referrer-Policy "same-origin";

	rewrite ^/info/([a-z0-9A-Z_-]+)$ /static_site.php?slug=$1 last;
	rewrite ^/hero/([a-z0-9A-Z_-]+)$ /hero.php?slug=$1 last;
	rewrite ^/bohater/([a-z0-9A-Z_-]+)$ /hero.php?slug=$1 last;
	rewrite ^/konkurs/([a-z0-9A-Z_-]+)$ /contest.php?slug=$1 last;
	rewrite ^/konkursy$ /contests.php last;
	rewrite ^/konkurs/([a-z0-9A-Z_-]+)/reklama$ /contest_preroll.php?slug=$1 last;
	rewrite ^/konkurs/([a-z0-9A-Z_-]+)/graj$ /contest_play.php?slug=$1 last;
	rewrite ^/konkursy$ /contests.php last;

	location / {
		try_files $uri $uri/ =404;
	}

	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;

	location = /50x.html {
		root /usr/share/nginx/html;
	}

	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_param APPLICATION_ENV 'production';
		fastcgi_param DB_PASS '57BU]Enp<NXCF<!Z';
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	}

	set $block 0;

	if ($query_string ~ "base64_(en|de)code\(.*\)") {
		set $block 1;
	}
	if ($request_uri ~ "base64_(en|de)code\(.*\)") {
		set $block 1;
	}
	if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
		set $block 1;
	}
	if ($request_uri ~ "(<|%3C).*script.*(>|%3E)") {
		set $block 1;
	}
	if ($query_string ~ "(<|%3C).*iframe.*(>|%3E)") {
		set $block 1;
	}
	if ($request_uri ~ "(<|%3C).*iframe.*(>|%3E)") {
		set $block 1;
	}
	if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
		set $block 1;
	}
	if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
		set $block 1;
	}

	## Block SQL injections
	if ($query_string ~ "union.*select.*\(") {
		set $block 1;
	}
	if ($query_string ~ "union.*all.*select.*") {
		set $block 1;
	}
	if ($query_string ~ "concat.*\(") {
		set $block 1;
	}

	## Block file injections
	if ($query_string ~ "[a-zA-Z0-9_]=http://") {
		set $block 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=(\.\.//?)+") {
		set $block 1;
	}
	if ($query_string ~ "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
		set $block 1;
	}

	## Block common exploits
	if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
		set $block 1;
	}
	if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
		set $block 1;
	}
	if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
		set $block 1;
	}
	if ($query_string ~ "proc/self/environ") {
		set $block 1;
	}
	if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
		set $block 1;
	}
	if ($query_string ~ "base64_(en|de)code\(.*\)") {
		set $block 1;
	}

	## Block spam
	if ($query_string ~ "\b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)\b") {
		set $block 1;
	}
	if ($query_string ~ "\b(erections|hoodia|huronriveracres|impotence|levitra|libido)\b") {
		set $block 1;
	}
	if ($query_string ~ "\b(ambien|blue\spill|cialis|cocaine|ejaculation|erectile)\b") {
		set $block 1;
	}
	if ($query_string ~ "\b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)\b") {
		set $block 1;
	}


	# Don't disable wget if you need it to run cron jobs!
	if ($http_user_agent ~ "Wget") {
	    set $block 1;
	}
	if ($http_user_agent ~ "Indy Library") {
		set $block 1;
	}
	if ($http_user_agent ~ "libwww-perl") {
		set $block 1;
	}
	if ($http_user_agent ~ "GetRight") {
		set $block 1;
	}
	if ($http_user_agent ~ "GetWeb!") {
		set $block 1;
	}
	if ($http_user_agent ~ "Go!Zilla") {
		set $block 1;
	}
	if ($http_user_agent ~ "Download Demon") {
		set $block 1;
	}
	if ($http_user_agent ~ "Go-Ahead-Got-It") {
		set $block 1;
	}
	if ($http_user_agent ~ "TurnitinBot") {
		set $block 1;
	}
	if ($http_user_agent ~ "GrabNet") {
		set $block 1;
	}


	# Other funny queries
	if ($query_string ~ "base64_(en|de)code") {
		set $block 1;
	}
	if ($request_uri ~ "base64_(en|de)code") {
		set $block 1;
	}

	if ($query_string ~ "base64") {
		set $block 1;
	}
	if ($query_string ~ "echo\+") {
		set $block 1;
	}
	if ($query_string ~ "perl\+") {
		set $block 1;
	}
	if ($query_string ~ "wget\+") {
		set $block 1;
	}
	if ($query_string ~ "bash\&") {
		set $block 1;
	}
	if ($query_string ~ "htaccess") {
		set $block 1;
	}
	if ($query_string ~ "accesson") {
		set $block 1;
	}
	if ($query_string ~ "password\&name") {
		set $block 1;
	}
	if ($request_uri ~ "base64") {
		set $block 1;
	}
	if ($request_uri ~ "echo\+") {
		set $block 1;
	}
	if ($request_uri ~ "perl\+") {
		set $block 1;
	}
	if ($request_uri ~ "wget\+") {
		set $block 1;
	}
	if ($request_uri ~ "bash\&") {
		set $block 1;
	}
	if ($request_uri ~ "htaccess") {
		set $block 1;
	}
	if ($request_uri ~ "accesson") {
		set $block 1;
	}
	if ($request_uri ~ "password\&name") {
		set $block 1;
	}


	# Go to hell
	if ($block = 1) {
		return 403;
	}

}
